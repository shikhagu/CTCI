public class Queue<T>{
  public class QueueNode<T>{
    private T data;
    private QueueNode<T> next;
    
    public QueueNode<T>(T data){
      this.data = data;
    }
  }
  
  private QueueNode<T> head;
  private QueueNode<T> tail;
  
  public void add(T item){
    QueueNode<T> node = new QueueNode<T>(item);
    tail.next = node;
    tail = node;
  }
  
  public T remove(){
    if(head == null)
      throw new EmptyQueueException();
      
    T item = head.data;
    head = head.next;
    return item;
  }
  
  public T peek(){
    if(head == null)
      throw new EmptyQueueException();

    return head.data;
  }
  
  public boolean isEmpty(){
    return head == null;
  }
}
