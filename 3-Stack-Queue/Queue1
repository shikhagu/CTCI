public class QueueNode<T> {
  private T data;
  private QueueNode<T> next;
  
  // constructor, getters, setters
}

public class Queue<T> {
  private QueueNode<T> first;
  private QueueNode<T> last;
  
  public void add(final T item) {
    final QueueNode<T> newNode = new QueueNode<T>();
    newNode.data = item;
    
    if(last!=null) {
      last.next = newNode;
    }
    last = newNode;
    
    if(first==null) {
      first = last;
    }
  }
  
  public T remove() {
    if(first == null) {
      throw new EmptyQueueException();
    }
    final T item = first.data;
    first = first.next;
    if(first==null) {
      last = null;
    }
    return item;
  }
  
  public T peek() {
    if(first == null) {
      throw new EmptyQueueException();
    }
    return first.data;
  }
  
  public boolean isEmpty() {
    return first == null;
  }
}
